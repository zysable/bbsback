#!/usr/bin/env node
const app = require('../app')
const http = require('http')
const {connectDB, closeConnection} = require('../db')

const port = normalizePort(process.env.PORT || '2333')
app.set('port', port)

const server = http.createServer(app)

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

function normalizePort(val) {
  const port = parseInt(val, 10)
  if (isNaN(port)) return val
  if (port >= 0) return port
  return false
}

function onError(error) {
  if (error.syscall !== 'listen') throw error
  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  console.log(`Server is running on http://localhost:${port}`)
  connectDB().then(() => {
    console.log('Database is connected!')
  }).catch(console.error)
}

server.on('close', () => {
  closeConnection().then(() => {
    console.log('Database connection is closed!')
    console.log('Server is closed!')
  }).catch(console.error)
})
